DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'ONNET_AVAILABILITY'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ONNET_AVAILABILITY CASCADE CONSTRAINTS'; END IF; END;//
DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'ONNET_AVAILABILITY_STATUS'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ONNET_AVAILABILITY_STATUS CASCADE CONSTRAINTS'; END IF; END;//

CREATE TABLE "ONNET_AVAILABILITY_STATUS"
(
SITE_ID                          NUMBER(10) NOT NULL,
CUSTOMER_ID                      NUMBER (20) NOT NULL,
SITE_NAME                        VARCHAR2 (100),
COUNTRY_NAME                     VARCHAR2 (255),
COUNTRY_ISO_CODE                 VARCHAR2 (10),
CITY                             varchar2 (255),
EXPIRY_DATE                      TIMESTAMP(6),
REQUEST_TIMEOUT                  TIMESTAMP(6),
ONNET_AVAILABILITY               VARCHAR2 (50),
ONNET_AVAILABILITY_TYPE_ID       NUMBER,
FAILURE_REASON                   VARCHAR2(255 BYTE)
)
//
ALTER TABLE ONNET_AVAILABILITY_STATUS ADD CONSTRAINT ONNET_AVAILABILITY_PK PRIMARY KEY(SITE_ID)
//
DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'ONNET_BUILDINGS_WITH_EFM'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ONNET_BUILDINGS_WITH_EFM CASCADE CONSTRAINTS'; END IF; END;//
CREATE TABLE  "ONNET_BUILDINGS_WITH_EFM"
(
BFG_SITE_ID			NUMBER (10) NOT NULL,
CREATED_DATE		DATE
)
//
ALTER TABLE ONNET_BUILDINGS_WITH_EFM ADD CONSTRAINT ONNET_BUILDINGS_WITH_EFM_PK PRIMARY KEY(BFG_SITE_ID)
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'ONNET_BUILDING'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ONNET_BUILDING CASCADE CONSTRAINTS'; END IF; END;//

CREATE TABLE "ONNET_BUILDING"
(
ONNET_BUILDING_ID   NUMBER (10) NOT NULL,
BFG_SITE_ID			NUMBER (10) NOT NULL,
FLOOR_NAME      	VARCHAR2 (255 Byte),
BUILDING_CODE		VARCHAR2 (255 Byte),
ADDRESS				VARCHAR2 (255 Byte),
STREET_NUMBER		VARCHAR2 (255 Byte),
STREET_NAME			VARCHAR2 (255 Byte),
POST_CODE			VARCHAR2 (255 Byte),
CITY				VARCHAR2 (255 Byte),
STATE				VARCHAR2 (255 Byte),
COUNTRY				VARCHAR2 (255 Byte),
KGI					VARCHAR2 (255 Byte),
ACCURACY			NUMBER (3),
LATITUDE			NUMBER (13,10),
LONGITUDE			NUMBER (13,10),
GROUP_NUMBER		VARCHAR2 (255 Byte),
DISTANCE			VARCHAR2 (255 Byte),
SUPPLIER			VARCHAR2 (255 Byte),
ADDRESS_TYPE		VARCHAR2 (255 Byte),
SELECTION			VARCHAR2 (10 Byte),
CREATED_BY			NUMBER (12),
CREATED_DATE		DATE
)
//
ALTER TABLE ONNET_BUILDING ADD CONSTRAINT ONNET_BUILDING_ID_PK PRIMARY KEY(ONNET_BUILDING_ID)
//
ALTER TABLE ONNET_BUILDING ADD CONSTRAINT ONNET_BUILDING_FK FOREIGN KEY(BFG_SITE_ID) REFERENCES ONNET_BUILDINGS_WITH_EFM(BFG_SITE_ID)
//
CREATE SEQUENCE ONNET_BUILDING_ID START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 100 NOORDER
//
CREATE index ONNET_BUILDING_INDEX_ID_FK on ONNET_BUILDING (BFG_SITE_ID)
//
DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'EFM_ADDRESS'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EFM_ADDRESS CASCADE CONSTRAINTS'; END IF; END;//

CREATE TABLE "EFM_ADDRESS"(
EFM_ADDRESS_ID 		NUMBER (10) NOT NULL,
BFG_SITE_ID			NUMBER (10) NOT NULL,
SELECTION			VARCHAR2 (10 Byte),
CREATED_DATE		DATE
)
//

ALTER TABLE EFM_ADDRESS ADD CONSTRAINT EFM_ADDRESS_ID_PK PRIMARY KEY(EFM_ADDRESS_ID)
//
ALTER TABLE EFM_ADDRESS ADD CONSTRAINT EFM_ADDRESS_FK FOREIGN KEY(BFG_SITE_ID) REFERENCES ONNET_BUILDINGS_WITH_EFM(BFG_SITE_ID)
//
CREATE SEQUENCE EFM_ADDRESS_ID START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 100 NOORDER
//
create index EFM_ADDRESS_INDEX_ID_FK on EFM_ADDRESS (BFG_SITE_ID)
//
DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'BRITISH_ADDRESS'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BRITISH_ADDRESS CASCADE CONSTRAINTS'; END IF; END;//
CREATE TABLE "BRITISH_ADDRESS"(
BRITISH_ADDRESS_ID  NUMBER (10) NOT NULL,
EFM_ADDRESS_ID 		NUMBER (10) NOT NULL,
SUB_PREMISES		VARCHAR2 (255 Byte),
PREMISES_NAME		VARCHAR2 (255 Byte),
THOROUGHFARE_NAME   VARCHAR2 (255 Byte),
POST_TOWN			VARCHAR2 (255 Byte),
COUNTY				VARCHAR2 (255 Byte),
POST_CODE			VARCHAR2 (255 Byte),
CREATED_DATE		DATE
)
//
ALTER TABLE BRITISH_ADDRESS ADD CONSTRAINT BRITISH_ADDRESS_ID_PK PRIMARY KEY(BRITISH_ADDRESS_ID)
//
ALTER TABLE BRITISH_ADDRESS ADD CONSTRAINT BRITISH_ADDRESS_FK FOREIGN KEY(EFM_ADDRESS_ID) REFERENCES EFM_ADDRESS(EFM_ADDRESS_ID)
//
CREATE SEQUENCE BRITISH_ADDRESS_ID START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 100 NOORDER
//
create index BRITISH_ADDRESS_INDEX_ID_FK on BRITISH_ADDRESS (EFM_ADDRESS_ID)
//
DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'ADDRESS_REFERENCE'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ADDRESS_REFERENCE CASCADE CONSTRAINTS'; END IF; END;//
CREATE TABLE ADDRESS_REFERENCE(
ADDRESS_REFERENCE_ID    NUMBER (10) NOT NULL,
EFM_ADDRESS_ID 			NUMBER (10) NOT NULL,
REF_NUM					VARCHAR2 (255 Byte),
QUALIFIER				VARCHAR2 (255 Byte),
DISTRICT_CODE			VARCHAR2 (255 Byte),
CREATED_DATE			DATE
	)
//
ALTER TABLE ADDRESS_REFERENCE ADD CONSTRAINT ADDRESS_REFERENCE_ID_PK PRIMARY KEY(ADDRESS_REFERENCE_ID)
//
ALTER TABLE ADDRESS_REFERENCE ADD CONSTRAINT ADDRESS_REFERENCE_FK FOREIGN KEY(EFM_ADDRESS_ID) REFERENCES EFM_ADDRESS(EFM_ADDRESS_ID)
//
CREATE SEQUENCE ADDRESS_REFERENCE_ID START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 100 NOORDER
//
create index ADDRESS_REFERENCE_INDEX_ID_FK on ADDRESS_REFERENCE (EFM_ADDRESS_ID)
//
DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'TECHNOLOGYS'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TECHNOLOGYS CASCADE CONSTRAINTS'; END IF; END;//
CREATE TABLE TECHNOLOGYS(
TECHNOLOGYS_ID  		NUMBER (10) NOT NULL,
ADDRESS_REFERENCE_ID 	NUMBER (10) NOT NULL,
TECHNOLOGY 				VARCHAR2 (255 Byte),
CREATED_DATE			DATE
)
//
ALTER TABLE TECHNOLOGYS ADD CONSTRAINT TECHNOLOGYS_ID_PK PRIMARY KEY(TECHNOLOGYS_ID)
//
ALTER TABLE TECHNOLOGYS ADD CONSTRAINT TECHNOLOGYS_FK FOREIGN KEY(ADDRESS_REFERENCE_ID) REFERENCES ADDRESS_REFERENCE(ADDRESS_REFERENCE_ID)
//
CREATE SEQUENCE TECHNOLOGYS_ID START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 100 NOORDER
//
CREATE index TECHNOLOGYS_INDEX_ID_FK on TECHNOLOGYS (ADDRESS_REFERENCE_ID)
//