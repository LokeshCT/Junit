DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'AVAILABILITY_TYPE'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AVAILABILITY_TYPE CASCADE CONSTRAINTS'; END IF; END;//

CREATE TABLE AVAILABILITY_TYPE
(
   AVAILABILITY_TYPE_ID   NUMBER,
   AVAILABILITY_STATUS    VARCHAR2 (255),
   DISPLAY_ICON_COLOUR    VARCHAR2 (255),
   REMARKS                VARCHAR2 (2000)
)
//

ALTER TABLE AVAILABILITY_TYPE ADD CONSTRAINT AVAILABILITY_TYPE_PK PRIMARY KEY(AVAILABILITY_TYPE_ID)
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SUPPLIER_SITE'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SUPPLIER_SITE CASCADE CONSTRAINTS'; END IF; END;//

CREATE TABLE SUPPLIER_SITE
(
   SITE_ID                          NUMBER (10),
   CUSTOMER_ID                      NUMBER (20) NOT NULL,
   SITE_NAME                        VARCHAR2 (100),
   COUNTRY_NAME                     VARCHAR2 (255),
   COUNTRY_ISO_CODE                 VARCHAR2 (10) NOT NULL,
   CITY                             varchar2 (255),
   EXPIRY_DATE                      TIMESTAMP(6),
   REQUEST_TIMEOUT                  TIMESTAMP(6),
   AVAILABILITY_TYPE_ID             NUMBER NOT NULL,
   AVAILABILITY_TELEPHONE_NUMBER    VARCHAR2 (38),
   ERROR_DESCRIPTION                VARCHAR2 (4000)
)
//

ALTER TABLE SUPPLIER_SITE ADD CONSTRAINT SUPPLIER_SITE_PK PRIMARY KEY(SITE_ID)
//

ALTER TABLE SUPPLIER_SITE ADD CONSTRAINT SUPPLIER_SITE_FK FOREIGN KEY(availability_type_id) REFERENCES availability_type(availability_type_id)
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SUPPLIER_PRODUCT'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SUPPLIER_PRODUCT CASCADE CONSTRAINTS'; EXECUTE IMMEDIATE 'DROP SEQUENCE SUPP_PROD_ID'; END IF; END;//

CREATE TABLE SUPPLIER_PRODUCT
(
   SUPP_PROD_ID                     NUMBER,
   SITE_ID                          NUMBER (10),
   SUPPLIER_ID                      NUMBER (38) NOT NULL,
   SUPPLIER_NAME                    VARCHAR2 (100) NOT NULL,
   SPAC_ID                          VARCHAR2 (255) NOT NULL,
   SUPPLIER_PRODUCT_ID              NUMBER (38),
   SUPPLIER_PRODUCT_NAME            VARCHAR2 (100),
   DISPLAY_SUPPLIER_PRODUCT_NAME    VARCHAR2 (255),
   PRODUCT_AVAILABILITY_CODE        VARCHAR2 (255),
   AVAILABILITY_CHECK_TYPE          VARCHAR2 (10),
   CUSTOMER_LOCATION_TYPE           VARCHAR2 (10),
   SUPPLIER_PRODUCT_STATUS          VARCHAR2 (25),
   ACCESS_TYPE                      VARCHAR2 (255),
   PARENT_ACCESS_TYPE               VARCHAR2 (255),
   SERVICE_VARIANT                  VARCHAR2 (255),
   CONTENTION_RATIO                 VARCHAR2 (100),
   DELIVERY_MODE                    VARCHAR2 (100),
   CPE_ACCESS_TYPE                  VARCHAR2 (500),
   CENTRALIZED_AVAIL_SUPPORT        VARCHAR2 (3),
   COMMON_ACCESS_CPE_SUPPLIER       VARCHAR2 (3),
   ACCESS_SPEED                     VARCHAR2 (100),
   ACCESS_UOM                       VARCHAR2 (20),
   PRODUCT_AVAILABLE                VARCHAR2 (255),
   AVAILABILITY_DESCRIPTION         VARCHAR2 (4000),
   MAX_DOWNSTREAM_BANDWIDTH         VARCHAR2 (100),
   SYMMETRIC_BANDWIDTH              VARCHAR2 (100),
   MAX_UPSTREAM_BANDWIDTH           VARCHAR2 (100),
   NUMBER_OF_COPPER_PAIRS           VARCHAR2 (100),
   EXCHANGE_CODE                    VARCHAR2 (100),
   SUPPLIER_TARIFF_ZONE             VARCHAR2 (255),
   CHECK_REFERENCE                  VARCHAR2 (100),
   INTERFACE_ID                     VARCHAR2 (100),
   INTERFACE_NAME                   VARCHAR2 (100),
   FRAMING_ID                       VARCHAR2 (100),
   FRAMING_NAME                     VARCHAR2 (100),
   CONNECTOR_ID                     VARCHAR2 (100),
   CONNECTOR_NAME                   VARCHAR2 (100),
   DESCRIPTION                      VARCHAR2 (4000),
   FAILURE_REASON                   VARCHAR2 (255),
   STATUS                           VARCHAR2 (100),
   MANDATORY_ATTRIBUTES             VARCHAR2 (255),
   ACTIVE                           VARCHAR2 (30),
   REQUESTED_TIME                   TIMESTAMP(6),
   REQUEST_TIMEOUT                  TIMESTAMP(6)
)
//

ALTER TABLE SUPPLIER_PRODUCT ADD CONSTRAINT SUPPLIER_PRODUCT_PK PRIMARY KEY(SUPP_PROD_ID)
//

ALTER TABLE SUPPLIER_PRODUCT ADD CONSTRAINT SUPPLIER_PRODUCT_FK FOREIGN KEY(SITE_ID) REFERENCES SUPPLIER_SITE(SITE_ID)
//

CREATE SEQUENCE SUPP_PROD_ID
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'AVAILABILITY_SET'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AVAILABILITY_SET CASCADE CONSTRAINTS'; EXECUTE IMMEDIATE 'DROP SEQUENCE SET_ID'; END IF; END;//

CREATE TABLE AVAILABILITY_SET
(
   SET_ID                  NUMBER,
   SUPP_PROD_ID            NUMBER NOT NULL,
   SET_NAME                VARCHAR2 (100) NOT NULL
)
//

ALTER TABLE AVAILABILITY_SET ADD CONSTRAINT AVAILABILITY_SET_PK PRIMARY KEY(SET_ID)
//

ALTER TABLE AVAILABILITY_SET ADD CONSTRAINT AVAILABILITY_SET_FK FOREIGN KEY(SUPP_PROD_ID) REFERENCES SUPPLIER_PRODUCT(SUPP_PROD_ID)
//

CREATE SEQUENCE SET_ID
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'AVAILABILITY_PARAM'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AVAILABILITY_PARAM CASCADE CONSTRAINTS'; EXECUTE IMMEDIATE 'DROP SEQUENCE PARAM_ID'; END IF; END;//

CREATE TABLE AVAILABILITY_PARAM
(
   PARAM_ID                   NUMBER,
   SET_ID                     NUMBER NOT NULL,
   PARAM_NAME                 VARCHAR2 (100),
   PARAM_VALUE                VARCHAR2 (100)
)
//

ALTER TABLE AVAILABILITY_PARAM ADD CONSTRAINT AVAILABILITY_PARAM_PK PRIMARY KEY(PARAM_ID)
//

ALTER TABLE AVAILABILITY_PARAM ADD CONSTRAINT AVAILABILITY_PARAM_FK FOREIGN KEY(SET_ID) REFERENCES AVAILABILITY_SET(SET_ID)
//

CREATE SEQUENCE PARAM_ID
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SUPPLIER_CHECK_LOGS'; IF tbl_exist = 1 THEN  EXECUTE IMMEDIATE 'DROP TABLE SUPPLIER_CHECK_LOGS CASCADE CONSTRAINTS';  EXECUTE IMMEDIATE 'DROP SEQUENCE SUPPLIER_CHECK_LOG_ID';  END IF; END; //

CREATE TABLE SUPPLIER_CHECK_LOGS
(
   SUPPLIER_CHECK_LOG_ID      NUMBER,
   REQUEST_ID                 VARCHAR2 (255),
   PAYLOAD                    CLOB,
   LOG_TYPE                   VARCHAR2 (8),
   REQUEST_NAME               VARCHAR2 (100),
   CREATED_BY                 VARCHAR2 (255),
   CREATED_ON                 TIMESTAMP(6),
   ERROR_DESCRIPTION          VARCHAR2 (4000)
)
//

ALTER TABLE SUPPLIER_CHECK_LOGS ADD CONSTRAINT SUPPLIER_CHECK_LOGS_pk PRIMARY KEY(SUPPLIER_CHECK_LOG_ID)
//

CREATE SEQUENCE SUPPLIER_CHECK_LOG_ID
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//