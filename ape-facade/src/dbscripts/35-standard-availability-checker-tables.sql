DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SAC_BULK_UPLOAD'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SAC_BULK_UPLOAD CASCADE CONSTRAINTS'; EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_FILE_NAME'; END IF; END;//

CREATE TABLE SAC_BULK_UPLOAD
(
	FILE_NAME            		  	VARCHAR2(50),
	FILE_DESCRIPTION              	VARCHAR2(100) 	NOT NULL,
	AVAILABILITY_STATUS				VARCHAR2(20),
	VALIDATION_STATUS				VARCHAR2(20),
	SALES_CHANNEL					VARCHAR2(100),
	SHARE_POINT_ORG_DOC_ID			VARCHAR2(100),
	SHARE_POINT_FAIL_DOC_ID			VARCHAR2(100),
	SHARE_POINT_RESULT_DOC_ID		VARCHAR2(100),
	ITERATION_COUNT					NUMBER(2),
	CREATE_DATETIME               	TIMESTAMP(6),
	CREATED_USER				  	VARCHAR2(20),
	UPDATE_DATETIME               	TIMESTAMP(6),
	UPDATE_USER					  	VARCHAR2(20)
)
//

ALTER TABLE SAC_BULK_UPLOAD ADD CONSTRAINT PK_SAC_BULK_UPLOAD PRIMARY KEY (FILE_NAME) USING INDEX
//

CREATE SEQUENCE SEQ_FILE_NAME
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//


DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SAC_SITE_REQUESTS'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SAC_SITE_REQUESTS CASCADE CONSTRAINTS'; END IF; END;//
DECLARE seq_exist INTEGER; BEGIN SELECT COUNT (*) INTO seq_exist FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SEQ_DUMMY_SITE_ID';IF seq_exist > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_DUMMY_SITE_ID'; END IF; END;//
  
CREATE TABLE SAC_SITE_REQUESTS
(
	FILE_NAME     				VARCHAR2(50), 
	SITE_ID						NUMBER(10),
	SITE_NAME 					VARCHAR2(100),
	COUNTRY_ISO_CODE   			VARCHAR2(5), 
	COUNTRY_NAME  				VARCHAR2(255), 
	TELEPHONE_NO         		VARCHAR2(10), 
	STATUS         				VARCHAR2(20),
	ERROR_DESCRIPTION           VARCHAR2(255),
	REQUEST_TIMESTAMP			TIMESTAMP(6),
	APE_2ND_REQUEST_ID		    VARCHAR2(50),
	APE_3RD_REQUEST_ID		    VARCHAR2(50),
	CREATE_DATETIME				TIMESTAMP(6),	
	CREATED_USER				VARCHAR2(20),
	UPDATE_DATETIME				TIMESTAMP(6),
	UPDATE_USER					VARCHAR2(20)
)
//

ALTER TABLE SAC_SITE_REQUESTS ADD CONSTRAINT PK_SITE_REQUESTS PRIMARY KEY (SITE_ID) USING INDEX
//
  
ALTER TABLE SAC_SITE_REQUESTS ADD CONSTRAINT FK_SITE_REQUESTS FOREIGN KEY(FILE_NAME) REFERENCES SAC_BULK_UPLOAD(FILE_NAME)
// 

CREATE SEQUENCE SEQ_DUMMY_SITE_ID
   START WITH 1
   MAXVALUE 9999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//

DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SAC_SUPPLIER_AVAILABILITY'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SAC_SUPPLIER_AVAILABILITY CASCADE CONSTRAINTS'; END IF; END;//
  
CREATE TABLE SAC_SUPPLIER_AVAILABILITY
(
	SITE_ID						NUMBER(10),
	SPAC_ID        				VARCHAR2(255),
	SUP_PROD_ID                 NUMBER,
	AVAILABILITY_STATUS  		VARCHAR2(3),
	STATUS						VARCHAR2(20),
	ERROR_DESCRIPTION         	VARCHAR2(255),
	APE_REQUEST_ID				VARCHAR2(50),
	CREATE_DATETIME             TIMESTAMP(6),
	CREATED_USER				VARCHAR2(20),
	UPDATE_DATETIME				TIMESTAMP(6),
	UPDATE_USER					VARCHAR2(20)
	
)
//

ALTER TABLE SAC_SUPPLIER_AVAILABILITY ADD CONSTRAINT PK_SAC_SUPPLIER_AVAILABILITY PRIMARY KEY (SITE_ID,SPAC_ID) USING INDEX
//

ALTER TABLE SAC_SUPPLIER_AVAILABILITY ADD CONSTRAINT FK_SAC_SUPPLIER_AVAILABILITY FOREIGN KEY(SITE_ID) REFERENCES SAC_SITE_REQUESTS(SITE_ID)
//


DECLARE tbl_exist INTEGER; BEGIN SELECT COUNT (*) INTO tbl_exist FROM USER_TABLES WHERE table_name = 'SAC_SUPPLIER_PROD_MASTER'; IF tbl_exist > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SAC_SUPPLIER_PROD_MASTER CASCADE CONSTRAINTS'; END IF; END;//
 
CREATE TABLE SAC_SUPPLIER_PROD_MASTER
(
    SEQ_PROD_ID                             NUMBER,
	SITE_ID                					NUMBER(10),
	SUPPLIER_ID                   			NUMBER(38),     
	SPAC_ID          						VARCHAR2(255),
	SUPPLIER_NAME                 			VARCHAR2(100),  
	SUPPLIER_PRODUCT_ID             		NUMBER(38),     
	SUPPLIER_PRODUCT_NAME                  	VARCHAR2(100),  
	DISPLAY_SUPPLIER_PRODUCT_NAME          	VARCHAR2(255),  
	PRODUCT_AVAILABILITY_CODE              	VARCHAR2(255),  
	AVAILABILITY_CHECK_TYPE                	VARCHAR2(10),   
	CUSTOMER_LOCATION_TYPE                 	VARCHAR2(10),   
	SUPPLIER_PRODUCT_STATUS                	VARCHAR2(25),   
	ACCESS_TYPE                            	VARCHAR2(255),  
	PARENT_ACCESS_TYPE                     	VARCHAR2(255),  
	SERVICE_VARIANT                        	VARCHAR2(255),  
	CONTENTION_RATIO                       	VARCHAR2(100),  
	DELIVERY_MODE                          	VARCHAR2(100),  
	CPE_ACCESS_TYPE                        	VARCHAR2(500),  
	CENTRALIZED_AVAIL_SUPPORT              	VARCHAR2(3),    
	COMMON_ACCESS_CPE_SUPPLIER             	VARCHAR2(3),    
	ACCESS_SPEED                           	VARCHAR2(100), 
	ACCESS_UOM                             	VARCHAR2(20),   
	PRODUCT_AVAILABLE                      	VARCHAR2(255),  
	AVAILABILITY_DESCRIPTION               	VARCHAR2(4000), 
	MAX_DOWNSTREAM_BANDWIDTH               	VARCHAR2(100),  
	SYMMETRIC_BANDWIDTH                    	VARCHAR2(100),  
	MAX_UPSTREAM_BANDWIDTH                 	VARCHAR2(100),  
	NUMBER_OF_COPPER_PAIRS                 	VARCHAR2(100),  
	EXCHANGE_CODE                          	VARCHAR2(100),  
	SUPPLIER_TARIFF_ZONE                   	VARCHAR2(255),  
	CHECK_REFERENCE                        	VARCHAR2(100),  
	INTERFACE_ID                           	VARCHAR2(100),  
	INTERFACE_NAME                         	VARCHAR2(100),  
	FRAMING_ID                             	VARCHAR2(100),  
	FRAMING_NAME                           	VARCHAR2(100),  
	CONNECTOR_ID                           	VARCHAR2(100),  
	CONNECTOR_NAME                         	VARCHAR2(100),
	AVAILABILITY_STATUS                    VARCHAR2(100) ,
	DESCRIPTION                            VARCHAR2(4000),
	FAILURE_REASON                         VARCHAR2(255),
	STATUS                                 VARCHAR2(100),  
	ACTIVE                                 VARCHAR2(30),   
	REQUESTED_TIME                         TIMESTAMP(6),   
	REQUEST_TIMEOUT                        TIMESTAMP(6),   
	MANDATORY_ATTRIBUTES                   VARCHAR2(255),   	
	APE_REQUEST_ID							VARCHAR2(50),
	REQUEST_TIMESTAMP						TIMESTAMP(6),
	RESPONSE_TIMESTAMP						TIMESTAMP(6),
	CREATE_DATETIME							TIMESTAMP(6),
	CREATED_USER							VARCHAR2(20),
	UPDATE_DATETIME							TIMESTAMP(6),
	UPDATE_USER								VARCHAR2(20)
)
//


ALTER TABLE SAC_SUPPLIER_PROD_MASTER ADD CONSTRAINT PK_SAC_SUPPLIER_MASTER PRIMARY KEY (SEQ_PROD_ID) USING INDEX
//

ALTER TABLE SAC_SUPPLIER_AVAILABILITY ADD CONSTRAINT FK2_SAC_SUPPLIER_AVAILABILITY FOREIGN KEY(SUP_PROD_ID) REFERENCES SAC_SUPPLIER_PROD_MASTER(SEQ_PROD_ID)
//

DECLARE seq_exist INTEGER; BEGIN SELECT COUNT (*) INTO seq_exist FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SEQ_SAC_SUP_PROD_ID';IF seq_exist > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SAC_SUP_PROD_ID'; END IF; END;//

CREATE SEQUENCE SEQ_SAC_SUP_PROD_ID
   START WITH 1
   MAXVALUE 9999999999
   MINVALUE 1
   NOCYCLE
   CACHE 100
   NOORDER
//





